name: Create Release
on:
  workflow_call:
    inputs:

      release_type:
        required: true
        type: string

      release_type_pretty:
        required: true
        type: string
      
      release_tag:
        required: true
        type: string
      
jobs:
  build:
    name: Build ${{ inputs.release_type_pretty }}
    strategy:
      fail-fast: true
      matrix:
        os: [linux, windows, darwin]
        arch: [amd64, arm64]
    runs-on: ubuntu-latest
    steps:
      
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: actions/setup-node@v3
      - uses: actions/setup-go@v3

      - name: Generate version strings
        run: go generate ./pkg/generate_version/generate_version.go
      
      - name: Build frontend
        run: go generate ./pkg/frontend/frontend.go
      
      - name: Build backend
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
        run: go build -o ./build
          
      - name: Compress
        run: zip ./build/fntwo-${{ matrix.os }}-${{ matrix.arch }}.zip ./build/fntwo*
          
      - name: Compute SHA256 Hash
        run: cat ./build/fntwo-${{ matrix.os }}-${{ matrix.arch }}.zip | sha256sum | awk '{print $1}' > ./build/fntwo-${{ matrix.os }}-${{ matrix.arch }}.zip.sha256
          
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          path: |
            ./build/*.zip*
      
  deploy:
    needs: build
    name: Deploy ${{ inputs.release_type_pretty }}
    runs-on: ubuntu-latest
    steps:

      - name: Download Artifacts
        uses: "actions/download-artifact@v3"

      - name: Create release
        uses: "marvinpinto/action-automatic-releases@v1.2.1"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{ inputs.release_tag }}
          prerelease: false
          title: ${{ inputs.release_type_pretty }} Builds
          files: |
            artifact/*
